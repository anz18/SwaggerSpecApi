---
swagger: "2.0"
info:
  version: "0.0.7.2"
  title: "NativeApi"
host: "sh-native-api-dev.homevsmart.com"
basePath: "/v1.0"
tags:
  - name: customer
    description: Customer Api
  - name: smarthome
    description: Smarthome Api
  - name: developer
    description: Developer Api
  - name: device
    description: Device Api
  - name: drs
    description: Drs Api
  - name: oauth2
    description: Oauth2 Api
  - name: smarthome - commands
    description: Smarthome Api - Commands
  - name: smarthome - programs
    description: Smarthome Api - Programs
  - name: smarthome - settings
    description: Smarthome Api - Settings
  - name: smarthome - status
    description: Smarthome Api - Status
  - name: easybill
    description: Easybill Api
  - name: easybill-consumption
    description: Easybill Api - Consumption
  - name: easybill-settings
    description: Easybill Api - Settings
schemes:
- "https"
paths:
  /authorize:
    get:
      summary: Oauth2
      description: Get oauth2
      tags:
        - oauth2
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorOauth2Response"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorOauth2Response"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorOauth2Response"
        302:
          description: "302 response"
          schema:
            $ref: "#/definitions/ErrorOauth2Response"
    options:
      summary: Oauth2
      description: Options oauth2
      tags:
        - oauth2
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /customer/acceptlegalcontracts:
    post:
      summary: AcceptLegalContracts
      description: AcceptLegalContracts
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Accept Legal Contracts"
          schema:
            $ref: "#/definitions/CustomerAcceptLegalContractsModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/acceptmembershipcontract:
    post:
      summary: AcceptMembershipContract
      description: AcceptMembershipContract
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Accept Membership Contract"
          schema:
            $ref: "#/definitions/CustomerAcceptMembershipContractModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        403:
          description: "Forbidden - The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/acceptprivacypolicy:
    post:
      summary: AcceptPrivacyPolicy
      description: AcceptPrivacyPolicy
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Accept Privacy Policy"
          schema:
            $ref: "#/definitions/CustomerAcceptPrivacyPolicyModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        403:
          description: "Forbidden - The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/changepassword:
    post:
      summary: Post ChangePassword
      description: ChangePassword
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CustomerChangePasswordRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomerChangePasswordRequest"
      responses:
        200:
          description: "Change Password"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
    options:
      summary: Options ChangePassword
      description: ChangePassword
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /customer/chargesessionhistory:
    get:
      summary: Charge Session History
      description: Charge Session History
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "uuid"
        description: uuid
        required: true
        type: string
      - in: "query"
        name: "startDate"
        description: yyyy-mm-dd
        type: string
      - in: "query"
        name: "endDate"
        description: yyyy-mm-dd
        type: string
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      responses:
        200:
          description: "Charge Session History"
          schema:
            $ref: "#/definitions/CustomerGetChargeSessionHistoryModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/checkuserinfo:
    get:
      summary: Check User Info
      description: Check User Info
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      responses:
        200:
          description: "Check User Info"
          schema:
            $ref: "#/definitions/CheckUserInfoModel"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        403:
          description: "Forbidden - The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/delete:
    delete:
      summary: Check User Info
      description: Check User Info
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Delete Customer"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
    options:
      summary: Options Check User Info
      description: Check User Info
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /customer/countries:
    get:
      summary: Get Countries
      description: Get Countries
      tags:
        - customer
      produces:
      - "application/json"
      responses:
        200:
          description: "Countries"
          schema:
            $ref: "#/definitions/GetCountriesModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /customer/languages:
    get:
      summary: Get Languages
      description: Get Languages
      tags:
        - customer
      produces:
      - "application/json"
      responses:
        200:
          description: "Languages"
          schema:
            $ref: "#/definitions/GetLanguagesModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /customer/profile:
    get:
      summary: Get Native Profile
      description: Get Native Profile
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      responses:
        200:
          description: "Get Native Profile"
          schema:
            $ref: "#/definitions/CustomerGetUserNativeModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/lastchargesessions:
    get:
      summary: Get Last Charge Sessions
      description: Get Last Charge Sessions
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "uuid"
        description: uuid
        required: true
        type: string
      - in: "query"
        name: "numberOfSession"
        description: uuid
        required: true
        type: integer
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      responses:
        200:
          description: "Get Last Charge Sessions"
          schema:
            $ref: "#/definitions/CustomerLastChargeSessionModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/logout:
    get:
      summary: Logout
      description: Logout
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Logout"
          schema:
            $ref: "#/definitions/CustomerLogoutModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/membershipcontract:
    get:
      summary: Membership Contract
      description: Membership Contract
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "deviceType"
        required: true
        type: string
      - in: "query"
        name: "regionCode"
        required: true
        type: string
      - in: "query"
        name: "appName"
        type: string
      - in: "query"
        name: "languageCode"
        required: true
        type: string
      responses:
        200:
          description: "Membership Contract"
          schema:
            $ref: "#/definitions/GetMembershipContractModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /customer/update:
    post:
      summary: Native Update
      description: Native Update
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CustomerUpdateNativeRequestModel"
        required: true
        schema:
          $ref: "#/definitions/CustomerUpdateNativeRequestModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CustomerUpdateNativeModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/permission/{clientid}:
    get:
      summary: Get Permission
      description: Get Permission
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "clientid"
        description: clientid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - PermissionAuthorizer: []
    post:
      summary: Set Permission
      description: Set Permission
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "clientid"
        description: clientid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
    options:
      summary: Options Permission
      description: Options Permission
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "clientid"
        description: clientid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /customer/privacypolicy:
    get:
      summary: Privacy Policy
      description: Privacy Policy
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "deviceType"
        required: true
        type: string
      - in: "query"
        name: "regionCode"
        required: true
        type: string
      - in: "query"
        name: "appName"
        type: string
      - in: "query"
        name: "languageCode"
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PrivacyPolicyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /customer/registercustomernotificationinfo:
    post:
      summary: Register Customer Notification Info
      description: Register Customer Notification Info
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RegisterCustomerNotificationInfoRequest"
        required: true
        schema:
          $ref: "#/definitions/RegisterCustomerNotificationInfoRequest"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Register Customer Notification Info"
          schema:
            $ref: "#/definitions/RegisterCustomerNotificationInfoModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /customer/signup:
    post:
      summary: Signup
      description: Signup
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CustomerRegisterRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomerRegisterRequest"
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Signup"
          schema:
            $ref: "#/definitions/CustomerSignupModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
    options:
      summary: Options Signup
      description: Signup
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /customer/removenotificationinfo:
    post:
      summary: Remove notification info
      description: Remove notification info
      tags:
        - customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RemoveNotificationInfoRequest"
        required: true
        schema:
          $ref: "#/definitions/RemoveNotificationInfoRequest"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Remove notification info"
          schema:
            $ref: "#/definitions/RemoveNotificationInfoModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /developer/deregister:
    delete:
      summary: Deregister Developer
      description: Deregister Developer
      tags:
        - developer
      responses:
        200:
          description: "200 response"
      security:
      - DeveloperAuthorizer: []
    options:
      summary: Options Deregister Developer
      description: Deregister Developer
      tags:
        - developer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /developer/list:
    get:
      summary: List Developer
      description: List Developer
      tags:
        - developer
      responses:
        200:
          description: "200 response"
      security:
      - DeveloperAuthorizer: []
    options:
      summary: Options List Developer
      description: List Developer
      tags:
        - developer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /developer/register:
    put:
      summary: Register Developer
      description: Register Developer
      tags:
        - developer
      responses:
        200:
          description: "200 response"
      security:
      - DeveloperAuthorizer: []
    options:
      summary: Register Developer
      description: Register Developer
      tags:
        - developer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /developer/update:
    post:
      summary: Update Developer
      description: Update Developer
      tags:
        - developer
      responses:
        200:
          description: "200 response"
      security:
      - DeveloperAuthorizer: []
    options:
      summary: Options Update Developer
      description: Update Developer
      tags:
        - developer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
  /device/deregister:
    post:
      summary: Deregister Native Device
      description: Deregister Native Device
      tags:
        - device
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "DeregisterDeviceNativeRequestModel"
        required: true
        schema:
          $ref: "#/definitions/DeregisterDeviceNativeRequestModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Deregister Native Device"
          schema:
            $ref: "#/definitions/DeregisterDeviceNativeModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDeviceResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDeviceResponse"
      security:
      - CustomAuthorizer: []
  /device/pairtoken:
    get:
      summary: Native Device Token
      description: Native Device Token
      tags:
        - device
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      responses:
        200:
          description: "Native Device Token"
          schema:
            $ref: "#/definitions/DeviceTokenNativeModel"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorDeviceResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDeviceResponse"
      security:
      - CustomAuthorizer: []
  /device/update:
    post:
      summary: Update Device
      description: Update Device
      tags:
        - device
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "body"
        name: "UpdateDeviceRequestModel"
        required: true
        schema:
          $ref: "#/definitions/UpdateDeviceRequestModel"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/UpdateDeviceModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDeviceResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorDeviceResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDeviceResponse"
  /device/randoma:
    post:
      summary: Get Random A
      description: Get Random A
      tags:
        - device
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "GetRandomARequestModel"
        required: true
        schema:
          $ref: "#/definitions/GetRandomARequestModel"
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Get Random A"
          schema:
            $ref: "#/definitions/GetRandomAModel"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /device/randomb:
    post:
      summary: Get Random B
      description: Get Random B
      tags:
        - device
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "GetRandomBRequestModel"
        required: true
        schema:
          $ref: "#/definitions/GetRandomBRequestModel"
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Get Random B"
          schema:
            $ref: "#/definitions/GetRandomBModel"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /device/register:
    post:
      summary: Register New Device V3
      description: Register New Device V3
      tags:
        - device
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RegisterNewDeviceV3Request"
        required: true
        schema:
          $ref: "#/definitions/RegisterNewDeviceV3Request"
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Register New Device V3"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
  /drs/amazoninfo:
    post:
      summary: Amazon Info
      description: Amazon Info
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestDrsModel"
        required: true
        schema:
          $ref: "#/definitions/RequestDrsModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Amazon Info"
          schema:
            $ref: "#/definitions/AmazonInfoModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/authorizationcode:
    post:
      summary: Authorization Code
      description: Authorization Code
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AuthorizationCodeRequestModel"
        required: true
        schema:
          $ref: "#/definitions/AuthorizationCodeRequestModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Authorization Code"
          schema:
            $ref: "#/definitions/AuthorizationCodeModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/checkamazoninfo:
    post:
      summary: Check Amazon Info
      description: Check Amazon Info
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestDrsModel"
        required: true
        schema:
          $ref: "#/definitions/RequestDrsModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Check Amazon Info"
          schema:
            $ref: "#/definitions/CheckAmazonInfoModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/orderdetergent:
    post:
      summary: Order Detergent
      description: Order Detergent
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestDrsModel"
        required: true
        schema:
          $ref: "#/definitions/RequestDrsModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      responses:
        200:
          description: "Order Detergent"
          schema:
            $ref: "#/definitions/OrderModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/ordersoftener:
    post:
      summary: Order Softener
      description: Order Softener
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestDrsModel"
        required: true
        schema:
          $ref: "#/definitions/RequestDrsModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Order Softener"
          schema:
            $ref: "#/definitions/OrderModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/setdetandsoft:
    post:
      summary: Set Detergent and Softener
      description: Set Detergent and Softener
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SetDetergentAndSoftenerRequestModel"
        required: true
        schema:
          $ref: "#/definitions/SetDetergentAndSoftenerRequestModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Set Detergent and Softener"
          schema:
            $ref: "#/definitions/DetergentAndSoftenerModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/setdetergent:
    post:
      summary: Set Detergent
      description: Set Detergent
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SetDetergentRequestModel"
        required: true
        schema:
          $ref: "#/definitions/SetDetergentRequestModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Set Detergent"
          schema:
            $ref: "#/definitions/DetergentAndSoftenerModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/setsoftener:
    post:
      summary: Set Softener
      description: Set Softener
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SetSoftenerRequestModel"
        required: true
        schema:
          $ref: "#/definitions/SetSoftenerRequestModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Set Softener"
          schema:
            $ref: "#/definitions/DetergentAndSoftenerModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /drs/totaldetandsoft:
    post:
      summary: Total Detergent and Softener
      description: Total Detergent and Softener
      tags:
        - drs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestDrsModel"
        required: true
        schema:
          $ref: "#/definitions/RequestDrsModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      responses:
        200:
          description: "Total Detergent and Softener"
          schema:
            $ref: "#/definitions/DetergentAndSoftenerModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorDrsResponse"
      security:
      - SharpAuthorizer: []
  /homeappliances:
    get:
      summary: Get all home appliances which are paired with the logged-in user account.
      description: This endpoint returns a list of all home appliances which are paired
        with the logged-in user account.
      tags:
        - smarthome
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      responses:
        200:
          description: "List of home appliances"
          schema:
            $ref: "#/definitions/200GetHomeAppliances"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/legacy/command:
    post:
      summary: Send Command
      description: Send Command
      tags:
        - smarthome
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SendCommandModel"
        required: true
        schema:
          $ref: "#/definitions/SendCommandModel"
      - in: "header"
        name: Token
        description: id_token
        required: true
        type: string
      responses:
        200:
          description: "Send Command"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorCustomerNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/legacy/homeappliances:
    get:
      summary: Get all home appliances which are paired with the logged-in user account.
      description: This endpoint returns a list of all home appliances which are paired
        with the logged-in user account.
      tags:
        - smarthome
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/200GetHomeAppliancesNative"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/legacy/status:
    get:
      summary: List all status which are paired with the device's uuid.
      description: This endpoint lists all status which are paired
        with the device's uuid.
      tags:
        - smarthome
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "query"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Get All Status of Device"
          schema:
            $ref: "#/definitions/GetAllStatusOfDeviceModel"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}:
    get:
      summary: Get a specific home appliances which are paired with the logged-in user account.
      description: This endpoint returns a specific home appliances which are paired
        with the logged-in user account.
      tags:
        - smarthome
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Specific home appliances"
          schema:
            $ref: "#/definitions/200GetHomeAppliancesHaid"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/commands:
    get:
      summary: Get a list of commands which are paired with the device's uuid.
      description: This endpoint returns a list of commands which are paired
        with the device's uuid.
      tags:
        - smarthome - commands
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "List of commands"
          schema:
            $ref: "#/definitions/HomeApplianceGetAllCommandsModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/commands/{commandkey}:
    put:
      summary: Put a specific command which are paired with the device's uuid.
      description: This endpoint puts a specific command which are paired
        with the device's uuid.
      tags:
        - smarthome - commands
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeApplianceCommandsPUTRequestModel"
        required: true
        schema:
          $ref: "#/definitions/HomeApplianceCommandsPUTRequestModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "path"
        name: commandkey
        description: key - List Commands service responses can use.
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Send Commands"
          schema:
            $ref: "#/definitions/HomeApplianceCommandsPUTModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/devicediscovery:
    get:
      summary: Get a list of all features which are paired with the device's uuid.
      description: This endpoint returns a list of all features which are paired
        with the device's uuid.
      tags:
        - smarthome
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "List Features"
          schema:
            $ref: "#/definitions/HomeApplianceHaidDeviceDiscoveryGETModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/active:
    get:
      summary: Get an active program which are paired with the device's uuid.
      description: This endpoint returns an active program which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Get Activate Program"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsActiveGETModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    put:
      summary: Put an key for activate program which are paired with the device's uuid.
      description: This endpoint put an key for activate program which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeApplianceHaidProgramsActivePUTRequestModel"
        required: true
        schema:
          $ref: "#/definitions/HomeApplianceHaidProgramsActivePUTRequestModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Set Active Program"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsActivePUTModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    delete:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/active/options:
    get:
      summary: Get active program options which are paired with the device's uuid.
      description: This endpoint returns active program options which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Get Active Program Options"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsActiveOptionsGETModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    put:
      summary: Put an key for set active program which are paired with the device's uuid.
      description: This endpoint put an key for set active program which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeApplianceHaidProgramsActiveOptionsPUTRequestModel"
        required: true
        schema:
          $ref: "#/definitions/HomeApplianceHaidProgramsActiveOptionsPUTRequestModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Set Active Program Options"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsActiveOptionsPUTModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/active/options/{optionkey}:
    get:
      summary: Get active program specific option which are paired with the device's uuid.
      description: This endpoint returns active program specific option which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: optionkey
        description: optionkey - List Features service options responses can use.
        required: true
        type: string
      responses:
        200:
          description: "Get Active Program Option"
          schema:
            $ref: "#/definitions/HomeApplianceGetActiveOptionKeyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    put:
      summary: Put an option key for set active program option which are paired with the device's uuid.
      description: This endpoint put an option key for set active program option which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeAppliancePutSelectedOptionKeyRequestModel"
        required: true
        schema:
          $ref: "#/definitions/HomeAppliancePutSelectedOptionKeyRequestModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: optionkey
        description: optionkey - List Features service options responses can use.
        required: true
        type: string
      responses:
        200:
          description: "Set Active Program Option"
          schema:
            $ref: "#/definitions/HomeAppliancePutActiveOptionKeyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/available:
    get:
      summary: List available programs which are paired with the device's uuid.
      description: This endpoint returns list of available programs which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "List Available Programs"
          schema:
            $ref: "#/definitions/HomeApplianceGetAllProgramsModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/available/{programkey}:
    get:
      summary: List available program options which are paired with the device's uuid.
      description: This endpoint returns list of available program options which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: programkey
        description: programkey - List Features service program responses can use.
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsAvailableProgramKeyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/selected:
    get:
      summary: List selected programs which are paired with the device's uuid.
      description: This endpoint returns list of selected programs which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Get Selected Program"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsSelectedGETModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    put:
      summary: Put an program key for set selected program which are paired with the device's uuid.
      description: This endpoint put an program key for set selected program which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeApplianceHaidProgramsSelectedPUTRequestModel"
        required: true
        schema:
          $ref: "#/definitions/HomeApplianceHaidProgramsSelectedPUTRequestModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Set Selected Program"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsSelectedPUTModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/selected/options:
    get:
      summary: List selected program options which are paired with the device's uuid.
      description: This endpoint returns list of selected program options which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Get Selected Program Options"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsSelectedOptionsGETModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    put:
      summary: Put an program key for set selected program options which are paired with the device's uuid.
      description: This endpoint put an program key for set selected program options which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeApplianceHaidProgramsSelectedOptionsPUTRequestModel"
        required: true
        schema:
          $ref: "#/definitions/HomeApplianceHaidProgramsSelectedOptionsPUTRequestModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "header"
        name: Content-Type
        required: true
        description: application/json
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Set Selected Program Options"
          schema:
            $ref: "#/definitions/HomeApplianceHaidProgramsSelectedOptionsPUTModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/programs/selected/options/{optionkey}:
    get:
      summary: Return selected program specific option which are paired with the device's uuid.
      description: This endpoint returns selected program specific option which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: optionkey
        description: optionkey - List Features service options responses can use. 
        required: true
        type: string
      responses:
        200:
          description: "Get Selected Program Option"
          schema:
            $ref: "#/definitions/HomeApplianceGetSelectedOptionKeyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    put:
      summary: Put an option key for set selected program option which are paired with the device's uuid.
      description: This endpoint put an option key for set selected program option which are paired
        with the device's uuid.
      tags:
        - smarthome - programs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeAppliancePutSelectedOptionKeyRequestModel"
        required: true
        schema:
          $ref: "#/definitions/HomeAppliancePutSelectedOptionKeyRequestModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: optionkey
        description: optionkey - List Features service options responses can use.
        required: true
        type: string
      responses:
        200:
          description: "Set Selected Program Option"
          schema:
            $ref: "#/definitions/HomeAppliancePutSelectedOptionKeyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        404:
          description: "Not Found - Resource is invalid, such as a user, does not exist."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/settings:
    get:
      summary: List settings which are paired with the device's uuid.
      description: This endpoint returns settings which are paired
        with the device's uuid.
      tags:
        - smarthome - settings
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Get Settings"
          schema:
            $ref: "#/definitions/HomeApplianceHaidSettingsGETModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/settings/{settingkey}:
    get:
      summary: Return specific setting which are paired with the device's uuid.
      description: This endpoint returns specific setting which are paired
        with the device's uuid.
      tags:
        - smarthome - settings
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: settingkey
        description: settingkey - List Features service settings responses can use.
        required: true
        type: string
      responses:
        200:
          description: "Get Setting"
          schema:
            $ref: "#/definitions/HomeApplianceGetSettingKeyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
    put:
      summary: Put an setting key for set setting which are paired with the device's uuid.
      description: This endpoint put an setting key for set setting which are paired
        with the device's uuid.
      tags:
        - smarthome - settings
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "HomeApplianceHaidSettingKeyPutModel"
        required: true
        schema:
          $ref: "#/definitions/HomeApplianceHaidSettingKeyPutModel"
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: settingkey
        description: settingkey - List Features service settings responses can use.
        required: true
        type: string
      responses:
        200:
          description: "Set Setting"
          schema:
            $ref: "#/definitions/HomeApplianceHaidSettingKeyPutResponseModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        409:
          description: "Conflict - The request could not be completed due to a conflict with the current state of the target resource"
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/status:
    get:
      summary: List status which are paired with the device's uuid.
      description: This endpoint lists status which are paired
        with the device's uuid.
      tags:
        - smarthome - status
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      responses:
        200:
          description: "Get Status"
          schema:
            $ref: "#/definitions/HomeApplianceGetAllStatusModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /homeappliances/{uuid}/status/{statuskey}:
    get:
      summary: List specific status which are paired with the device's uuid.
      description: This endpoint lists specific status which are paired
        with the device's uuid.
      tags:
        - smarthome - status
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: access_token
        required: true
        type: string
      - in: "path"
        name: uuid
        description: uuid
        required: true
        type: string
      - in: "path"
        name: statuskey
        description: statuskey - List Features service status responses can use.
        required: true
        type: string
      responses:
        200:
          description: "Get Specific Status"
          schema:
            $ref: "#/definitions/HomeApplianceGetStatusKeyModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
      security:
      - CustomAuthorizer: []
  /swversion:
    get:
      summary: Return software version.
      description: This endpoint return software version.
      tags:
        - smarthome
      produces:
      - "application/json"
      responses:
        200:
          description: "Sw Version"
          schema:
            $ref: "#/definitions/HomeApplianceGetSWVersionModel"
        400:
          description: "Bad Request - The request was invalid or cannot be otherwise served."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        401:
          description: "Unauthorized - Missing or incorrect authentication credentials."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
        500:
          description: "Internal Server Error - Something is broken."
          schema:
            $ref: "#/definitions/ErrorNativeResponse"
  /easybill/{deviceid}/consumption/daily:
    get:
      summary: Daily Consumption
      tags:
        - easybill-consumption
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/DailyModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/ecomode:
    get:
      summary: Eco Mode
      description: This endpoint get customer's eco mode configuration.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EcoModeGetModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
    post:
      summary: Eco Mode
      description: This endpoint set customer's eco mode configuration.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      - in: "body"
        name: "EcoModeRequest"
        required: true
        schema:
          $ref: "#/definitions/EcoModeRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/EcoModePostModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/active:
    get:
      summary: Is Active
      description: This endpoint get customer's easybill configuration.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/IsActiveGetModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
    post:
      summary: Is Active
      description: This endpoint set customer's easybill configuration.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      - in: "body"
        name: "IsActiveRequest"
        required: true
        schema:
          $ref: "#/definitions/IsActiveRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/IsActivePostModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/consumption/monthly:
    get:
      summary: Monthly Consumption
      tags:
        - easybill-consumption
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MonthlyModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/quota:
    get:
      summary: Quota
      description: This endpoint get customer's quota.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/QuotaGetModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
    post:
      summary: Quota
      description: This endpoint set customer's quota.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      - in: "body"
        name: "QuotaRequest"
        required: true
        schema:
          $ref: "#/definitions/QuotaRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/QuotaPostModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/settings/reset:
    post:
      summary: Reset Settings
      description: This endpoint reset customer's settings.
      tags:
        - easybill-settings
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResetSettingsPostModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/settings:
    get:
      summary: Get Settings
      description: This endpoint get customer's settings.
      tags:
        - easybill-settings
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SetSettingsGetModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
    post:
      summary: Set Settings
      description: This endpoint set customer's settings.
      tags:
        - easybill-settings
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      - in: "body"
        name: "SetSettingsRequest"
        required: true
        schema:
          $ref: "#/definitions/SetSettingsRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SetSettingsPostModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/place:
    get:
      summary: Place Get
      description: This endpoint get customer's place.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PlaceGetModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
    post:
      summary: Place Set
      description: This endpoint set customer's place.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      - in: "body"
        name: "PlaceRequest"
        required: true
        schema:
          $ref: "#/definitions/PlaceRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SubscriberGroupPostModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
  /easybill/{deviceid}/tariff:
    get:
      summary: Tariff
      description: This endpoint get customer's tariff.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TariffGetModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
    post:
      summary: Tariff
      description: This endpoint set customer's tariff.
      tags:
        - easybill
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: Token
        description: vestelaccestoken
        required: true
        type: string
      - in: "path"
        name: deviceid
        description: deviceid
        required: true
        type: string
      - in: "body"
        name: "TariffRequest"
        required: true
        schema:
          $ref: "#/definitions/TariffRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/TariffPostModel"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/EasyBillErrorResponse"
securityDefinitions:
  DeveloperAuthorizer:
    type: "apiKey"
    name: "Token"
    in: "header"
    x-amazon-apigateway-authtype: "cognito_user_pools"
  CustomAuthorizer:
    type: "apiKey"
    name: "Token"
    in: "header"
    x-amazon-apigateway-authtype: "CUSTOM"
  SharpAuthorizer:
    type: "apiKey"
    name: "Token"
    in: "header"
    x-amazon-apigateway-authtype: "cognito_user_pools"
  PermissionAuthorizer:
    type: "apiKey"
    name: "Token"
    in: "header"
    x-amazon-apigateway-authtype: "cognito_user_pools"
definitions:
  ErrorDeviceResponse:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            code:
              type: "string"
            message:
              type: "string"
    title: "Error Device Response"
    description: "Error device response returned from services."
  ErrorCustomerNativeResponse:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            code:
              type: "string"
            message:
              type: "string"
    title: "Error Customer NativeResponse"
    description: "Error customer native response returned from services."
  ErrorDrsResponse:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            code:
              type: "string"
            message:
              type: "string"
    title: "Error Drs Response"
    description: "Error drs response returned from services."
  SendCommandModel:
    type: "object"
    required:
      - wifi_card_type
      - device_type
      - uuid
      - brand
      - message
    properties:
      wifi_card_type:
        type: string
      device_type:
        type: string
      uuid:
        type: string
      brand:
        type: string
      message:
        type: string
    title: "Send Command Request"
    description: "Send Command Request body."
  CustomerAcceptPrivacyPolicyModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      message:
        type: "string"
        default: "Success"
      status:
        type: "integer"
        title: "The Status Schema"
    title: "Get Privacy Policy"
    description: "Customer accept privacy policy success response."
  HomeApplianceHaidProgramsSelectedGETModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          options:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
          key:
            type: "string"
    title: "Home Connect Get Selected Programs"
    description: "Home connect get selected programs."
  SetDetergentAndSoftenerRequestModel:
    type: "object"
    properties:
      detergent:
        type: "integer"
        description: "detergent amount"
      uuid:
        type: "string"
        description: "uuid"
      softener:
        type: "integer"
        description: "softener amount"
    title: "Set Detergent and Softener Success Response."
    description: "Set Detergent and Softener Success Response."
  HomeApplianceHaidSettingsGETModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          settings:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
          error:
            type: "array"
            items:
              type: "object"
              properties:
                key:
                  type: "string"
    title: "Home Connect Get Settings"
    description: "Home connect gets settings from device."
  SetDetergentRequestModel:
    type: "object"
    properties:
      detergent:
        type: "integer"
        description: "detergent amount"
      uuid:
        type: "string"
    title: "Set Detergent Request."
    description: "Set Detergent Request."
  DeregisterDeviceNativeRequestModel:
    type: "object"
    required:
    - "uuid"
    properties:
      uuid:
        type: "string"
    title: "Deregister Device"
    description: "Deregister Device request body."
  UpdateDeviceRequestModel:
    title: Update Device
    description: Update Device request body.
    required:
      - uuid
      - token
      - deviceFeatures
    properties:
      uuid:
        type: string
      token:
        type: string
      appName:
        type: string
      deviceFeatures:
        type: string
  UpdateDeviceModel:
    title: Update Device
    description: Update Device Success Response
    properties:
      status:
        type: string
        default: SUCCESS
      data:
        type: array
        items:
          type: object
          properties:
            returnCode:
              type: integer
              default: 1
            returnMessage:
              type: string
              default: SUCCESS
  AuthorizationCodeRequestModel:
    description: Authorization Code Request.
    title: Authorization Code Request.
    type: object
    properties:
      authorization_code:
        type: string
        description: Taken from app.
      uuid:
        type: integer
      codeVerifier:
        type: string
        description: Taken from app.
      clientid:
        type: string
        description: Taken from app.
      redirectUri:
        type: string
        description: Taken from app.
  AuthorizationCodeModel:
    description: Authorization Code Success Response.
    title: Authorization Code Success Response.
    type: object
    properties:
      message:
        type: string
        default: success     
  CustomerChangePasswordRequest:
    type: "object"
    required:
    - "newPassword"
    - "oldPassword"
    properties:
      oldPassword:
        type: "string"
      newPassword:
        type: "string"
    title: "Customer Change Password"
    description: "Customer change password request body."
  RequestDrsModel:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "uuid"
    title: "Drs Post Request."
    description: "Drs Post Request."
  HomeApplianceHaidProgramsSelectedPUTModel:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WashingMachine.Option.Temperature"
      key:
        type: "string"
        default: "LaundryCare.WashingMachine.Program.Sportswear"
    title: "Home Connect Put Selected Programs"
    description: "Home connect put selected programs."
  HomeApplianceHaidProgramsSelectedOptionsPUTModel:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WashingMachine.Option.Temperature"
    title: "Home Connect Put Selected Options"
    description: "Home connect puts selected options to device."
  GetLanguagesModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "string"
          description: "Language List"
    title: "Get Languages"
    description: "Get Languages Success Response"
  SetSoftenerRequestModel:
    type: "object"
    properties:
      uuid:
        type: "string"
      softener:
        type: "integer"
        description: "softener amount"
    title: "Set Softener Request."
    description: "Set Softener Request."
  HomeApplianceGetActiveOptionKeyModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          value:
            type: "string"
          key:
            type: "string"
    title: "Home Connect Get Specific Option."
    description: "Home connect get specific option."
  HomeApplianceHaidSettingKeyPutModel:
    type: "object"
    properties:
      settings:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "Refrigeration.FridgeCooler.Setting.Main.Temperature"
    title: "Home Connect Put Selected Setting"
    description: "Home connect puts selected setting to device."
  GetRandomARequestModel:
    type: "object"
    required:
    - "cid"
    - "token"
    properties:
      appName:
        type: "string"
      token:
        type: "string"
      cid:
        type: "string"
    title: "Get RandomA Token"
    description: "Get RandomA Token request body."
  RegisterNewDeviceV3Request:
    type: "object"
    required:
    - "cognitoID"
    - "configTimeInEpoch"
    - "deviceFeatures"
    - "deviceModel"
    - "featureType"
    - "ip"
    - "mac"
    - "name"
    - "softwareVersion"
    - "token"
    - "type"
    - "uuid"
    properties:
      deviceFeatures:
        type: "string"
      cognitoID:
        type: "string"
      appName:
        type: "string"
      ip:
        type: "string"
      type:
        type: "string"
      uuid:
        type: "string"
      mac:
        type: "string"
      token:
        type: "string"
      featureType:
        type: "string"
      name:
        type: "string"
      deviceModel:
        type: "string"
      configTimeInEpoch:
        type: "string"
      softwareVersion:
        type: "string"
    title: "Register New Device"
    description: "Register New Device request body."
  HomeApplianceGetAllProgramsModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          programs:
            type: "array"
            items:
              type: "object"
              properties:
                key:
                  type: "string"
    title: "Home Connect Get All Programs."
    description: "Gets all programs of device."
  HomeApplianceGetSWVersionModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          swVersion:
            type: "string"
    title: "Get SW version of server."
    description: "Get SW version of server."
  HomeApplianceHaidProgramsAvailableProgramKeyModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          options:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
          key:
            type: "string"
    title: "Home Connect Get Program"
    description: "Home connect get given program."
  GetRandomBRequestModel:
    type: "object"
    required:
    - "token"
    - "uuid"
    properties:
      appName:
        type: "string"
      uuid:
        type: "string"
      token:
        type: "string"
    title: "Get RandomB Token"
    description: "Get RandomB Token request body."
  RegisterCustomerNotificationInfoModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      message:
        type: "string"
        default: "Success"
      status:
        type: "integer"
        title: "The Status Schema"
    title: "Register Customer Notification Info"
    description: "Register Customer Notification Info success response."
  CustomerUpdateNativeRequestModel:
    type: "object"
    required:
    - "brand"
    - "country"
    - "language"
    - "name"
    - "surname"
    - "timeZone"
    properties:
      country:
        type: "string"
      surname:
        type: "string"
      name:
        type: "string"
      timeZone:
        type: "string"
      language:
        type: "string"
      brand:
        type: "string"
    title: "Update Customer"
    description: "Customer update request body."
  GetCountriesModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "string"
          description: "Country List"
      status:
        type: "integer"
    title: "Get Countries"
    description: "Get Countries Success Response"
  GetRandomBModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "object"
          properties:
            returnCode:
              type: "integer"
            data:
              type: "object"
              properties:
                randomB:
                  type: "string"
            returnMessage:
              type: "string"
              default: "SUCCESS"
      status:
        type: "string"
        default: "SUCCESS"
    title: "Get RandomB Token"
    description: "Get RandomB Token Success Response"
  HomeApplianceGetAllCommandsModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          commands:
            type: "array"
            items:
              type: "object"
              properties:
                key:
                  type: "string"
    title: "Home Connect Get All Commands."
    description: "Gets all commands of device."
  CustomerUpdateNativeModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      message:
        type: "string"
        default: "Success"
      status:
        type: "integer"
        title: "The Status Schema"
    title: "Update Customer"
    description: "Customer update success response."
  HomeApplianceHaidProgramsActiveOptionsGETModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          options:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
    title: "Home Connect Get Options"
    description: "Home connect Get Options API."
  CustomerLastChargeSessionModel:
    type: "object"
    properties:
      response:
        type: "array"
        items:
          type: "object"
          properties:
            durationInSec:
              type: "integer"
            startTime:
              type: "string"
              description: "hh:mm:ss"
            totalPowerInkW:
              type: "integer"
            startDate:
              type: "string"
              description: "yyyy-mm-dd"
      status:
        type: "string"
        default: "SUCCESS"
    title: "Last Charge Session"
    description: "Customer last charge session success response."
  HomeApplianceHaidDeviceDiscoveryGETModel:
    type: "object"
    properties:
      device:
        type: "object"
        properties:
          settings:
            type: "array"
            items:
              type: "object"
              properties:
                valueType:
                  type: "string"
                value:
                  type: "string"
                key:
                  type: "string"
          uuid:
            type: "string"
          options:
            type: "array"
            items:
              type: "object"
              properties:
                valueType:
                  type: "string"
                key:
                  type: "string"
          model:
            type: "string"
          programs:
            type: "array"
            items:
              type: "object"
              properties:
                key:
                  type: "string"
          error:
            type: "array"
            items:
              type: "object"
              properties:
                valueType:
                  type: "string"
                key:
                  type: "string"
          type:
            type: "string"
          commands:
            type: "array"
            items:
              type: "object"
              properties:
                valueType:
                  type: "string"
                key:
                  type: "string"
          status:
            type: "array"
            items:
              type: "object"
              properties:
                valueType:
                  type: "string"
                value:
                  type: "string"
                key:
                  type: "string"
    title: "Home Connect Get All Features"
    description: "Home connect gets all features from device."
  CheckAmazonInfoModel:
    type: "object"
    properties:
      message:
        type: "boolean"
    title: "Check Amazon Info Success Response."
    description: "Check Amazon Info Success Response."
  CustomerAcceptLegalContractsModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      message:
        type: "string"
        default: "Success"
      status:
        type: "integer"
        title: "The Status Schema"
    title: "Get Membership Contract"
    description: "Customer accept legal contracts success response."
  HomeApplianceHaidProgramsSelectedOptionsGETModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          options:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
    title: "Home Connect Get Selected Options"
    description: "Home connect gets selected options from device."
  HomeAppliancePutActiveOptionKeyModel:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WashingMachine.Option.Temperature"
    title: "Home Connect Put Specific Option Active Device."
    description: "Home connect put specific option."
  CustomerGetChargeSessionHistoryModel:
    title: Get Charge Session History
    description: Customer get charge session history response.
    properties:
      status:
        type: string
        default: SUCCESS
      response:
        type: string
        properties:
          startDate:
            type: string
            description: yyyy-mm-dd
          endDate:
            type: string
            description: yyyy-mm-dd
          durationInSec:
            type: integer
          totalPowerInkW:
            type: integer
  CustomerRegisterRequest:
    type: "object"
    required:
    - "appName"
    - "email"
    - "name"
    - "password"
    - "surname"
    properties:
      country:
        type: "string"
      password:
        type: "string"
      surname:
        type: "string"
      appName:
        type: "string"
      name:
        type: "string"
      timeZone:
        type: "string"
      language:
        type: "string"
      brand:
        type: "string"
      email:
        type: "string"
        description: "Customer e-mail address."
      tuyaId:
        type: "string"
    title: "Register Customer"
    description: "Customer registiration request body."
  CustomerSignupModel:
    title: Register Customer
    description: Customer registiration success response.
    properties:
      status:
        type: integer
        title: The Status Schema
        default: 200
      customStatus:
        type: integer
        title: The Customstatus Schema
        default: 0
      headers:
        type: object
        title: The Headers Schema
      isBase64Encoded:
        type: boolean
        title: The Isbase64encoded Schema
        default: false
      message:
        type: string
        default: Success
      base64Encoded:
        type: boolean
        title: The Base64encoded Schema
        default: false
  RemoveNotificationInfoModel:
    title: Remove Notification
    description: Remove Notification success response.
    properties:
      status:
        type: integer
        title: The Status Schema
        default: 200
      customStatus:
        type: integer
        title: The Customstatus Schema
        default: 0
      headers:
        type: object
        title: The Headers Schema
      isBase64Encoded:
        type: boolean
        title: The Isbase64encoded Schema
        default: false
      message:
        type: string
        default: Success
      base64Encoded:
        type: boolean
        title: The Base64encoded Schema
        default: false
  RemoveNotificationInfoRequest:
    type: "object"
    required:
    - "platform"
    - "devId"
    properties:
      platform:
        type: string
      devId:
        type: string
    title: "Remove Notification"
    description: "Remove Notification info request body."
  GetMembershipContractModel:
    type: "object"
    properties:
      data:
        type: "string"
        description: "Membership contract"
        default: "<HTML membershipcontract>"
      documentVersion:
        type: "integer"
        description: "Version of document"
      status:
        type: "integer"
    title: "Get Membership Contract"
    description: "Customer get membership contract request params."
  ErrorOauth2Response:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            code:
              type: "string"
            message:
              type: "string"
    title: "Error Oauth2 Response"
    description: "Error oauth2 response returned from services."
  HomeApplianceGetAllStatusModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          status:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
    title: "Home Connect Get All Status"
    description: "Home connect get status API."
  AmazonInfoModel:
    type: "object"
    properties:
      messagge:
        type: "object"
        properties:
          AmazonRefreshToken:
            type: "string"
          AmazonAccessToken:
            type: "string"
          Amazonclientid:
            type: "string"
    title: "Amazon Info Success Response."
    description: "Amazon Info Success Response."
  HomeApplianceHaidProgramsActivePUTModel:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WashingMachine.Option.Temperature"
      key:
        type: "string"
        default: "LaundryCare.WashingMachine.Program.Sportswear"
    title: "Home Connect Start"
    description: "Home connect start API."
  Empty:
    type: "object"
    title: "Empty Schema"
  HomeApplianceGetSelectedOptionKeyModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          value:
            type: "string"
          key:
            type: "string"
    title: "Home Connect Get Specific Option."
    description: "Home connect gets specific option."
  PrivacyPolicyModel:
    type: "object"
    properties:
      data:
        type: "string"
        description: "Membership contract"
        default: "<HTML membershipcontract>"
      documentVersion:
        type: "integer"
        description: "Version of document"
      status:
        type: "integer"
    title: "Get Privacy Policy"
    description: "Customer get privacy policy success response."
  HomeApplianceCommandsPUTModel:
    type: "object"
    properties:
      commands:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WasherDryer.Command.Pause"
    title: "Home Connect Put Command."
    description: "Home connect Put command API."
  HomeApplianceGetSettingKeyModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          value:
            type: "string"
          key:
            type: "string"
    title: "Home Connect Get Specific Setting."
    description: "Home connect gets specific setting."
  HomeApplianceHaidProgramsActiveGETModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          error:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
          key:
            type: "string"
          option:
            type: "array"
            items:
              type: "object"
              properties:
                value:
                  type: "string"
                key:
                  type: "string"
    title: "Home Connect Start"
    description: "Home connect start API."
  GetRandomAModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "object"
          properties:
            result:
              type: "string"
              default: "SUCCESS"
            randomA:
              type: "string"
      status:
        type: "string"
        default: "SUCCESS"
    title: "Get RandomA Token"
    description: "Get RandomA Token Success Response"
  RegisterCustomerNotificationInfoRequest:
    type: "object"
    required:
    - "devId"
    - "platform"
    - "regId"
    properties:
      devId:
        type: "string"
      regId:
        type: "string"
      platform:
        type: "string"
    title: "Register Customer Notification Info"
    description: "Register Customer Notification Info request body."
  DetergentAndSoftenerModel:
    type: "object"
    properties:
      message:
        type: "object"
        properties:
          SoftenerAmount:
            type: "integer"
          DetergentAmount:
            type: "integer"
    title: "Set Detergent and Softener Success Response."
    description: "Set Detergent and Softener Success Response."
  DeviceTokenNativeModel:
    type: "object"
    properties:
      status:
        type: "integer"
        default: 200
      deviceToken:
        type: "string"
        description: "Example: 87eda908-830f-44"
    title: "Device Token"
    description: "Device token response body."
  HomeAppliancePutSelectedOptionKeyModel:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WashingMachine.Option.Temperature"
    title: "Home Connect Put Specific Option."
    description: "Home connect put specific option."
  CheckUserInfoModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      message:
        type: "string"
        default: "Success"
      status:
        type: "integer"
        title: "The Status Schema"
    title: "Check User Info"
    description: "Check User Info Success Response."
  CustomerAcceptMembershipContractModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      message:
        type: "string"
        default: "Success"
      status:
        type: "integer"
        title: "The Status Schema"
    title: "Get Membership Contract"
    description: "Customer accept membership contract success response."
  ErrorNativeResponse:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            code:
              type: "string"
            message:
              type: "string"
    title: "Error Native Response"
    description: "Error native response returned from services."
  CustomerLogoutModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Example: 87eda908-830f-44"
    title: "Customer Logout"
    description: "Customer logout response body."
  200GetHomeAppliancesNative:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          homeappliances:
            type: "array"
            items:
              type: "object"
              properties:
                enumber:
                  type: "string"
                connected:
                  type: "boolean"
                uuid:
                  type: "string"
                featureType:
                  type: "string"
                name:
                  type: "string"
                wifiVersion:
                  type: "string"
                configTimeInEpoch:
                  type: "string"
                type:
                  type: "string"
                brand:
                  type: "string"
                vib:
                  type: "string"
                mac:
                  type: "string"
                option:
                  type: "string"
    title: "list appliance"
    description: "home connect list appliance."
  CustomerGetUserNativeModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      status:
        type: "integer"
        title: "The Status Schema"
      customer:
        type: "object"
        title: "The Customer Schema"
        properties:
          country:
            type: "string"
            title: "The Country Schema"
          surname:
            type: "string"
            title: "The Surname Schema"
          name:
            type: "string"
            title: "The Name Schema"
          timeZone:
            type: "string"
            title: "The Timezone Schema"
          language:
            type: "string"
            title: "The Language Schema"
          brand:
            type: "string"
            title: "The Brand Schema"
          ownedDeviceNumber:
            type: "integer"
            title: "The Owneddevicenumber Schema"
          email:
            type: "string"
            title: "The Email Schema"
    title: "The Root Schema"
  200GetHomeAppliances:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          homeappliances:
            type: "array"
            items:
              type: "object"
              properties:
                enumber:
                  type: "string"
                connected:
                  type: "boolean"
                uuid:
                  type: "string"
                featureType:
                  type: "string"
                name:
                  type: "string"
                wifiVersion:
                  type: "string"
                configTimeInEpoch:
                  type: "string"
                type:
                  type: "string"
                brand:
                  type: "string"
                vib:
                  type: "string"
                mac:
                  type: "string"
                option:
                  type: "string"
    title: "list appliance"
    description: "home connect list appliance."
  DeregisterDeviceNativeModel:
    type: "object"
    properties:
      headers:
        type: "object"
        title: "The Headers Schema"
        properties: {}
      isBase64Encoded:
        type: "boolean"
        title: "The Isbase64encoded Schema"
        default: false
      customStatus:
        type: "integer"
        title: "The Customstatus Schema"
      base64Encoded:
        type: "boolean"
        title: "The Base64encoded Schema"
        default: false
      message:
        type: "string"
        default: "Success"
      status:
        type: "integer"
        title: "The Status Schema"
    title: "Deregister Device"
    description: "Deregister Device success response."
  HomeApplianceHaidProgramsActiveOptionsPUTModel:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WashingMachine.Option.Temperature"
    title: "Home Connect Put Options"
    description: "Home connect Put Options to active device."
  200GetHomeAppliancesHaid:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          enumber:
            type: "string"
          connected:
            type: "boolean"
          uuid:
            type: "string"
          featureType:
            type: "string"
          name:
            type: "string"
          wifiVersion:
            type: "string"
          configTimeInEpoch:
            type: "string"
          type:
            type: "string"
          brand:
            type: "string"
          vib:
            type: "string"
          mac:
            type: "string"
          option:
            type: "string"
    title: "List Appliance with Given ID"
    description: "List appliance with given uuid."
  OrderModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "TEST_ORDER_PLACED"
    title: "Order Success Response."
    description: "Order Detergent Success Response."
  HomeApplianceGetStatusKeyModel:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          value:
            type: "string"
          key:
            type: "string"
    title: "Home Connect Get Status."
    description: "Home connect Get selected status API."
  HomeApplianceCommandsPUTRequestModel:
    type: object
    properties:
      commands:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              default: LaundryCare.WasherDryer.Command.Pause
    title: Home Connect Put Command.
    description: Put selected command.
  HomeApplianceHaidProgramsActivePUTRequestModel:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
              default: "LaundryCare.WashingMachine.Option.Temperature"
      key:
        type: "string"
        default: "LaundryCare.WashingMachine.Program.Sportswear"
    title: "Home Connect Start"
    description: "Put command request."
  HomeApplianceHaidProgramsActiveOptionsPUTRequestModel:
    description: Home connect Put Options to active device.
    title: Home Connect Put Options
    type: object
    properties:
      options:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature
            value:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature.30Degree
  HomeAppliancePutSelectedOptionKeyRequestModel:
    description: Home connect put specific option.
    title: Home Connect Put Specific Option.
    type: object
    properties:
      options:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature
            value:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature.30Degree
  HomeApplianceHaidProgramsSelectedPUTRequestModel:
    description: Home connect put selected programs.
    title: Home Connect Put Selected Programs
    type: object
    properties:
      key:
        type: string
        default: LaundryCare.WashingMachine.Program.Sportswear
      options:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature
            value:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature.30Degree
  HomeApplianceHaidProgramsSelectedOptionsPUTRequestModel:
    description: Home connect puts selected options to device.
    title: Home Connect Put Selected Options
    type: object
    properties:
      options:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature
            value:
              type: string
              default: LaundryCare.WashingMachine.Option.Temperature.30Degree
  HomeApplianceHaidSettingKeyPutResponseModel:
    description: Home connect puts selected setting to device.
    title: Home Connect Put Selected Setting
    type: object
    properties:
      status:
        type: string
        default: Success
  GetAllStatusOfDeviceModel:
    description: get all status of device.
    title: Get All Stats of Device
    type: object
    properties:
      data:
        type: string
        description: example = "{\"OVCURTI\":null,\"OVDURTI\":null}"
      status:
        type: string
        default: SUCCESS
  EasyBillErrorResponse:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            code:
              type: "string"
            message:
              type: "string"
    title: "Error Response"
    description: "Error response returned from services."
  EcoModeGetModel:
    type: "object"
    properties:
      message:
        type: "string"
        default: EcoMode is active.
    title: "EcoModeGet"
  EcoModePostModel:
    type: "object"
    properties:
      message:
        type: "string"
        default: EcoMode Changed.
    title: "EcoModePost"
  IsActiveGetModel:
    type: "object"
    properties:
      active:
        type: "boolean"
    title: "IsActiveGet"
  IsActivePostModel:
    type: "object"
    properties:
      active:
        type: "boolean"
    title: "IsActivePost"
  QuotaGetModel:
    type: "object"
    properties:
      Quota:
        type: "integer"
        default: Quota is (integer).
    title: "QuotaGet"
  QuotaPostModel:
    type: "object"
    properties:
      message:
        type: "string"
        default: Quota Changed.
    title: "QuotaPost"
  ResetSettingsPostModel:
    type: "object"
    properties:
      message:
        type: "string"
        default: Reset Settings Success.
    title: "ResetSettingsPost"
  SetSettingsPostModel:
    type: "object"
    properties:
      message:
        type: "string"
        default: Set Settings Success.
    title: "SetSettingsPost"
  SetSettingsGetModel:
    type: "object"
    properties:
      settings:
        type: "object"
        properties:
          tariff:
            type: "string"
          active:
            type: "boolean"
          quota:
            type: "integer"
          ecomode:
            type: "boolean"
          place:
            type: "string"
    title: "SetSettingsGet"
  PlaceGetModel:
    type: "object"
    properties:
      place:
        type: "string"
        default: Place is (string).
    title: "SubscriberGroupGet"
  SubscriberGroupPostModel:
    type: "object"
    properties:
      message:
        type: "string"
        default: Place Changed.
    title: "SubscriberGroupPost"
  TariffGetModel:
    type: "object"
    properties:
      Tariff:
        type: "string"
    title: "TariffGet"
  TariffPostModel:
    type: "object"
    properties:
      message:
        type: "string"
        default: Tariff Changed.
    title: "TariffPost"
  EcoModeRequest:
    type: "object"
    properties:
      ecomode:
        type: "boolean"
        default: true
    title: "EcoModeRequest"
  IsActiveRequest:
    type: "object"
    properties:
      active:
        type: "boolean"
        default: true
    title: "IsActiveRequest"
  QuotaRequest:
    type: "object"
    properties:
      quota:
        type: "integer"
        default: 100
    title: "QuotaRequest"
  SetSettingsRequest:
    type: "object"
    properties:
      quota:
        type: "integer"
        default: 100
      ecomode:
        type: "boolean"
        default: true
      tariff:
        type: "string"
      place:
        type: "string"
    title: "SetSettingsRequest"
  PlaceRequest:
    type: "object"
    properties:
      place:
        type: "string"
    title: "PlaceRequest"
  TariffRequest:
    type: "object"
    properties:
      tariff:
        type: "string"
    title: "TariffRequest"
  DailyModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "object"
          properties:
            day:
              type: string
              default: mm-dd-yyyy
            kwh:
              type: integer
            cost:
              type: integer
    example:
      data:
        - day: 2/26/2020
          kwh: 110
          cost: 80
        - day: 2/25/2020
          kwh: 90
          cost: 60
  MonthlyModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "object"
          properties:
            kwh:
              type: integer
            cost:
              type: integer
            push80:
              type: boolean
            push100:
              type: boolean
            end:
              type: string
              default: mm-dd-yyyy
            start:
              type: string
              default: mm-dd-yyyy
    example:
      data:
        - kwh: 110
          cost: 80
          push80: false
          push100: false
          end: 2/29/2020
          start: 2/1/2020
        - kwh: 90
          cost: 60
          push80: false
          push100: false
          end: 1/31/2020
          start: 1/1/2020
